name: CI Angular app through Github Actions

on:
  push:
    branches: [main]
  pull_request:

jobs:
  check_skip_flags:
    runs-on: ubuntu-latest
    outputs:
      head-commit-message: ${{ steps.get_head_commit_message.outputs.HEAD_COMMIT_MSG }}
    steps:
      - name: Get repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Print head git commit message
        id: get_head_commit_message
        run: echo "HEAD_COMMIT_MSG=$(git show -s --format=%s)" >> $GITHUB_OUTPUT
  test:
    needs: check_skip_flags
    if: "!contains(needs.check_skip_flags.outputs.head-commit-message, '[skip-test]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Setup
        run: npm ci
        working-directory: frontend
      - name: Test
        run: |
          npm test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
        working-directory: frontend
  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Setup
        run: npm ci
        working-directory: frontend
      - name: Build
        run: npm run build --output-path dist-node-${{ matrix.node-version }}/ --verbose
        working-directory: frontend
  deploy:
    if: github.event_name != 'pull_request'
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Setup
        run: npm ci
        working-directory: frontend
      - name: Deploy
        if: github.event_name != 'pull_request'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run deploy --if-present
        working-directory: frontend
